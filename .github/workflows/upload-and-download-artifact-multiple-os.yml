name: Upload and Download Artifact Multiple OS

on:
  push:
    paths:
      - '.github/workflows/upload-and-download-artifact-multiple-os.yml'
      - 'src/dotnet/WebApp/**'
  workflow_dispatch:

jobs:
  upload:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        working-directory: ./src/dotnet/WebApp
    steps:
      - name: checkout code
        uses: actions/checkout@v4.1.7

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v4.0.1
        with:
          dotnet-version: '8.x'

      - name: Build code
        run: dotnet build --configuration Release

      - name: Publish Code
        run: |
          # Set the publish directory based on OS
          if [[ "$RUNNER_OS" == "Windows" ]]; then
            PUBLISH_DIR="${{ runner.temp }}\\myapp"
          else
            PUBLISH_DIR="${{ runner.temp }}/myapp"
          fi

          # Publish the application
          echo "Publishing to $PUBLISH_DIR"
          mkdir -p "$PUBLISH_DIR"
          dotnet publish -c Release --output "$PUBLISH_DIR"

          # Verify contents
          echo "Contents of $PUBLISH_DIR:"
          ls "$PUBLISH_DIR"

      - name: Upload Artifact
        uses: actions/upload-artifact@v4.3.6
        with:
          name: '.net-web-app-${{ runner.os }}'
          path: ${{ runner.temp }}/myapp

  # download:
  #   strategy:
  #     matrix:
  #       os: [ubuntu-latest, windows-latest, macos-latest]
  #   runs-on: ${{ matrix.os }}
  #   needs: upload
  #   env:
  #     package-name: .net-web-app
  #     deployment-slot: production

  #   steps:
  #     - name: Download artifact from build job
  #       uses: actions/download-artifact@v4.1.8
  #       with:
  #         name: ${{ env.package-name }}

  #     - name: List files in root directory
  #       run: |
  #         if [[ "$RUNNER_OS" == "Windows" ]]; then
  #           Get-ChildItem -Path . | ForEach-Object { Write-Output $_.Name }
  #         else
  #           ls -la
  #         fi
